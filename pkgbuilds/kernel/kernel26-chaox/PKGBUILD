# Contributor: Jens Pranaitis <jens@chaox.net>
# Based on the work of godane <slaxemulator@gmail.com>
pkgbase=kernel
pkgname=("kernel26-chaox" "kernel26-chaox-wireless" "kernel26-chaox-sources" "kernel26-chaox-firmware")
_basekernel=2.6.30
pkgver=2.6.30.4
pkgrel=2
pkgdesc="Linux kernel based on slax config. Used in chaox-ng"
arch=("i686")
license=('GPL2')
groups=('base')
url="http://www.kernel.org"
makedepends=("git" "lzma")
source=(ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-$_basekernel.tar.bz2
	http://kernel.org/pub/linux/kernel/v2.6/patch-$pkgver.bz2
  config
	openlog.patch
  kernel26-chaox.preset
  # wifi patches from pentoo and aircrack-ng, kudos to them!
  4000_mac80211_2.6.28-rc4-wl_frag+ack_v3.patch
  4002_mac80211-2.6.29-fix-tx-ctl-no-ack-retry-count.patch
  4004_zd1211rw-2.6.28.patch
  4012_openwrt-b43-disable_qos_when_openfw.patch
  rtl8187_injection_speed_2.6.30-rc6.patch
  add-ap-mode-ath5k.patch
  http://www.kernel.org/pub/linux/kernel/people/edward/reiser4/reiser4-for-2.6/reiser4-for-2.6.30.patch.bz2
  http://www.kernel.org/pub/linux/kernel/people/bart/rt3090.patch.bz2
  http://saber-personal-project.googlecode.com/files/tlb.patch
)
md5sums=('7a80058a6382e5108cdb5554d1609615'
         'd0fc44b54ba5953140b3f2aa9a1f2580'
         '9c7438b69ae9385298bb7db32f76deae'
         'a49390dd08e4f7702b8f4b550f1ad84e'
         '27b73ecc9083efcf62ff276ee19326a4'
         'ca85d39144f07b0500c663779dda9259'
         'a713e50e8f2cf82ae9cf7e10a9f82412'
         '9c474a07e0f6f7b7549fa562e8cee080'
         '94cb11a39099d69662b6b5fa3cb0a11e'
         'ff33e6f2120119707bc5de62b26947dd'
         '09787bb326f05f65602d294a12170bbb'
         '49d5c097872663d5e540026c7eeb6ac8'
         '3ac21c65f48d09fe7bd8f89e88cff96a'
         '4238facbbbb1277a4e6368e41be12ca2')
build() {
  KARCH=x86
  cd "${srcdir}"
  git clone http://git.c3sl.ufpr.br/pub/scm/aufs/aufs2-standalone.git
  cd aufs2-standalone
  git checkout origin/aufs2-30
  cd ../linux-$_basekernel
  if [ "$_basekernel" != "$pkgver" ]; then
  # add latest kernel stable patch
         patch -Np1 < "${srcdir}"/patch-$pkgver ||return 1
  fi
  # add squashfs and aufs
  patch -Np1 -i "${srcdir}"/aufs2-standalone/aufs2-standalone.patch || return 1
  patch -Np1 -i "${srcdir}"/aufs2-standalone/aufs2-kbuild.patch || return 1
  cp -R "${srcdir}"/aufs2-standalone/{Documentation,include,fs,config.mk} .
  # add openlog patch
  patch -Np0 -i "${srcdir}"/openlog.patch || return 1
  # add reiser4
  patch -Np1 -i "${srcdir}"/reiser4-for-2.6.30.patch || return 1
  # add rt3090 driver
  patch -Np1 -i "${srcdir}"/rt3090.patch || return 1
  # wifi patches
  patch -Np1 -i "${srcdir}"/4000_mac80211_2.6.28-rc4-wl_frag+ack_v3.patch || return 1
  patch -Np1 -i "${srcdir}"/4002_mac80211-2.6.29-fix-tx-ctl-no-ack-retry-count.patch || return 1
  patch -Np1 -i "${srcdir}"/4004_zd1211rw-2.6.28.patch || return 1
  patch -Np1 -i "${srcdir}"/4012_openwrt-b43-disable_qos_when_openfw.patch || return 1
  patch -Np1 -i "${srcdir}"/rtl8187_injection_speed_2.6.30-rc6.patch || return 1
  patch -Np1 -i "${srcdir}"/add-ap-mode-ath5k.patch || return 1
  # support proprietary ati drivers
  patch -Np0 -i "${srcdir}"/tlb.patch || return 1
  cp ../config ./.config
  # build the full kernel version to use in pathnames
  . ./.config
  ### next line is only needed for rc kernels
  _kernver="$pkgver"${CONFIG_LOCALVERSION}""
  # load configuration
  make menuconfig
  make bzImage modules || return 1
}

package_kernel26-chaox() {
depends=('coreutils' 'module-init-tools' 'mkinitcpio>=0.5.18' 'kernel26-chaox-firmware' 'kernel26-chaox-wireless')
  conflicts=('aufs')
  replaces=('kernel24' 'kernel24-scsi' 'kernel26-scsi'
          'alsa-driver' 'ieee80211' 'hostap-driver26'
          'pwc' 'nforce' 'squashfs' 'ivtv' 'aufs'
          'zd1211' 'kvm-modules' 'iwlwifi' 'rt2x00-cvs' 'kernel26' 'kernel26slax')
  provides=('kernel26')
  install=$pkgname.install
  cd "${srcdir}"/linux-$_basekernel
  . ./.config
  ### next line is only needed for rc kernels
  _kernver="$pkgver"${CONFIG_LOCALVERSION}""
  mkdir -p "${pkgdir}"/{lib/modules,boot}
  make INSTALL_MOD_PATH="${pkgdir}" modules_install || return 1
  rm -rf "${pkgdir}"/lib/firmware
  cp System.map "${pkgdir}"/boot/System.map26 || return 1
  cp arch/x86/boot/bzImage "${pkgdir}"/boot/vmlinuz26 || return 1
  cd "${pkgdir}"/lib/modules/${_kernver} || return 1
  rm -f source build; ln -sf ../../../usr/src/linux-${_kernver} build || return 1
  cd "${srcdir}"/linux-$_basekernel
  # set correct depmod command for install
  . ./.config
  ### next line is only needed for rc kernels
  _kernver="$pkgver"${CONFIG_LOCALVERSION}""
  sed -i -e "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" "${startdir}"/$pkgname.install
  mkdir -p "${pkgdir}"/etc/mkinitcpio.d/
  echo -e "# DO NOT EDIT THIS FILE\nALL_kver='${_kernver}'" > "${pkgdir}"/etc/mkinitcpio.d/${pkgname}.kver
  install -m644 "${srcdir}"/kernel26-chaox.preset "${pkgdir}"/etc/mkinitcpio.d/
  # remove wifi stuff
  mkdir -p "${srcdir}"/wifi/{net,drivers/net} || return 1
  mv "$pkgdir"/lib/modules/$_kernver/kernel/net/wireless "$srcdir"/wifi/net/ || return 1
  mv "$pkgdir"/lib/modules/$_kernver/kernel/net/mac80211 "$srcdir"/wifi/net/ || return 1
  mv "$pkgdir"/lib/modules/$_kernver/kernel/drivers/net/wireless "$srcdir"/wifi/drivers/net/ || return 1
}
package_kernel26-chaox-wireless() {
depends=("kernel26-chaox=$pkgver")
pkgdesc=("wifi stack and drivers for kernel26-chaox")
  cd "${srcdir}"/linux-$_basekernel
  source .config
  _kernver="$pkgver${CONFIG_LOCALVERSION}"
  mkdir -p "$pkgdir"/lib/modules/$_kernver/kernel
  cp -r "${srcdir}"/wifi/* "$pkgdir"/lib/modules/$_kernver/kernel/ || return 1
}
package_kernel26-chaox-sources() {
  cd "${srcdir}"/linux-$_basekernel
  source .config
  _kernver="$pkgver"${CONFIG_LOCALVERSION}""
  install -D -m644 Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/Makefile
  install -D -m644 kernel/Makefile \
    ${pkgdir}/usr/src/linux-${_kernver}/kernel/Makefile
  install -D -m644 .config \
    ${pkgdir}/usr/src/linux-${_kernver}/.config
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include

  for i in acpi asm-{generic,x86} config linux math-emu media net pcmcia scsi sound trace video; do
    cp -a include/$i ${pkgdir}/usr/src/linux-${_kernver}/include/
  done

  # copy arch includes for external modules
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/x86
  cp -a arch/x86/include ${pkgdir}/usr/src/linux-${_kernver}/arch/x86/

  # copy files necessary for later builds, like nvidia and vmware
  cp Module.symvers ${pkgdir}/usr/src/linux-${_kernver}
  cp -a scripts ${pkgdir}/usr/src/linux-${_kernver}
  # fix permissions on scripts dir
  chmod og-w -R ${pkgdir}/usr/src/linux-${_kernver}/scripts
  #mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/.tmp_versions
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/x86/kernel

  cp arch/x86/Makefile ${pkgdir}/usr/src/linux-${_kernver}/arch/x86/
  if [ "$CARCH" = "i686" ]; then
    cp arch/x86/Makefile_32.cpu ${pkgdir}/usr/src/linux-${_kernver}/arch/x86/
  fi
  cp arch/x86/kernel/asm-offsets.s ${pkgdir}/usr/src/linux-${_kernver}/arch/x86/kernel/

  # add headers for lirc package
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video
  cp drivers/media/video/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/
  for i in bt8xx cpia2 cx25840 cx88 em28xx et61x251 pwc saa7134 sn9c102 usbvideo zc0301; do
   mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
   cp -a drivers/media/video/$i/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/video/$i
  done
  # add dm headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  cp drivers/md/*.h  ${pkgdir}/usr/src/linux-${_kernver}/drivers/md
  # add inotify.h
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include/linux
  cp include/linux/inotify.h ${pkgdir}/usr/src/linux-${_kernver}/include/linux/
  # add CLUSTERIP file for iptables
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/net/ipv4/netfilter/
  # add wireless headers
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/
  cp net/mac80211/*.h ${pkgdir}/usr/src/linux-${_kernver}/net/mac80211/
  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/9912
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core
  cp drivers/media/dvb/dvb-core/*.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/dvb-core/
  # add dvb headers for external modules
  # in reference to:
  # http://bugs.archlinux.org/task/11194
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/
  cp include/config/dvb/*.h ${pkgdir}/usr/src/linux-${_kernver}/include/config/dvb/
  # add dvb headers for http://mcentral.de/hg/~mrec/em28xx-new
  # in reference to:
  # http://bugs.archlinux.org/task/13146
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/dvb/frontends/lgdt330x.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  cp drivers/media/video/msp3400-driver.h ${pkgdir}/usr/src/linux-${_kernver}/drivers/media/dvb/frontends/
  # add xfs and shmem for aufs building
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/mm
  cp fs/xfs/xfs_sb.h ${pkgdir}/usr/src/linux-${_kernver}/fs/xfs/xfs_sb.h
  # add vmlinux
  cp vmlinux ${pkgdir}/usr/src/linux-${_kernver}
  # copy in Kconfig files
  for i in `find . -name "Kconfig*"`; do
    mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/`echo $i | sed 's|/Kconfig.*||'`
    cp $i ${pkgdir}/usr/src/linux-${_kernver}/$i
  done
  cd ${pkgdir}/usr/src/linux-${_kernver}/include && ln -s asm-x86 asm
  chown -R root.root ${pkgdir}/usr/src/linux-${_kernver}
  find ${pkgdir}/usr/src/linux-${_kernver} -type d -exec chmod 755 {} \;
  # remove unneeded architectures
  rm -rf ${pkgdir}/usr/src/linux-${_kernver}/arch/{alpha,arm,arm26,avr32,blackfin,cris,frv,h8300,ia64,m32r,m68k,m68knommu,mips,mn10300,parisc,powerpc,ppc,s390,sh,sh64,sparc,sparc64,um,v850,xtensa}
} 
package_kernel26-chaox-firmware() {
pkgdesc="firmware for chaox kernel"
license=("custom")
replaces=("iwlwifi-3945-ucode" "iwlwifi-4965-ucode" "iwlwifi-5000-ucode" "iwlwifi-5150-ucode"
          "rt2x00-rt61-fw")
  cd "${srcdir}"/linux-$_basekernel
  make INSTALL_MOD_PATH="${pkgdir}" firmware_install
  cd ..
  git clone git://git.kernel.org/pub/scm/linux/kernel/git/dwmw2/linux-firmware.git
  cp -r linux-firmware/* "${pkgdir}"/lib/firmware/
  mkdir -p "${pkgdir}"/usr/share/licenses/kernel26-chaox-firmware/
  mv "${pkgdir}"/lib/firmware/LICENCE* "${pkgdir}"/usr/share/licenses/kernel26-chaox-firmware/
  cp "${srcdir}"/linux-$_basekernel/COPYING "${pkgdir}"/usr/share/licenses/kernel26-chaox-firmware/
}
